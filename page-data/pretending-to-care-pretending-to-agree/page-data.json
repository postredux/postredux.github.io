{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/pretending-to-care-pretending-to-agree","result":{"data":{"post":{"slug":"/pretending-to-care-pretending-to-agree","title":"Pretending to Care, Pretending to Agree","date":"17.06.2022","tags":null,"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Pretending to Care, Pretending to Agree\",\n  \"date\": \"2022-06-17T00:00:00.000Z\",\n  \"slug\": \"/pretending-to-care-pretending-to-agree\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ribbonfarm.com/2015/05/20/pretending-to-care-pretending-to-agree\"\n  }, \"https://ribbonfarm.com/2015/05/20/pretending-to-care-pretending-to-agree\")), mdx(\"hr\", null), mdx(\"p\", null, \"One of the most interesting ideas I\\u2019ve encountered in recent years has been the hypothesis that the opposite of addiction is not cure, but community. Setting aside genetic predispositions, it seems that the risk of debilitating addiction to anything is vastly lowered and even managed down into a positive, if the cause of addiction is socially situated. Drinking or gaming alone risks triggering any latent genetic tendencies towards alcoholism or addictive gaming. Drinking and playing games socially seems to make us flourish more, instead of degenerate (though it does create higher-level addictions, such as civilizational addiction to oil).\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"https://ribbonfarm.com/2015/05/20/pretending-to-care-pretending-to-agree One of the most interesting ideas I’ve encountered in recent years…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/pretending-to-care-pretending-to-agree","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}
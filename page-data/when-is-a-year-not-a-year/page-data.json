{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/when-is-a-year-not-a-year","result":{"data":{"post":{"slug":"/when-is-a-year-not-a-year","title":"When is a Year not a Year?","date":"17.06.2022","tags":null,"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"When is a Year not a Year?\",\n  \"date\": \"2022-06-17T00:00:00.000Z\",\n  \"slug\": \"/when-is-a-year-not-a-year\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ribbonfarm.com/2014/09/02/when-is-a-year-not-a-year\"\n  }, \"https://ribbonfarm.com/2014/09/02/when-is-a-year-not-a-year\")), mdx(\"hr\", null), mdx(\"p\", null, \"prepare\\xA0not\\xA0plan.\\xA0Planning at\\xA0any\\xA0time scale is more often\\xA0harmful than helpful: planning activity subtracts in a zero-sum way from clock-time. Preparation adds in a non-zero-sum way to narrative time. The specifics of what\\xA0preparation\\xA0entails differ from person to person and context to context, but they all involve being more mindful of multiple time-scales at once.\"), mdx(\"hr\", null), mdx(\"p\", null, \"So if you find yourself running out of clock-time, don\\u2019t add more clock-time. Deepen the narrative time somehow.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"https://ribbonfarm.com/2014/09/02/when-is-a-year-not-a-year prepare not plan. Planning at any time scale is more often harmful than helpful…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/when-is-a-year-not-a-year","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}
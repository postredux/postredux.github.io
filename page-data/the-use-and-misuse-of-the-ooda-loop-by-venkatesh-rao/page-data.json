{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/the-use-and-misuse-of-the-ooda-loop-by-venkatesh-rao","result":{"data":{"post":{"slug":"/the-use-and-misuse-of-the-ooda-loop-by-venkatesh-rao","title":"The Use and Misuse of the OODA Loop - by Venkatesh Rao","date":"17.06.2022","tags":null,"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"The Use and Misuse of the OODA Loop - by Venkatesh Rao\",\n  \"date\": \"2022-06-17T00:00:00.000Z\",\n  \"slug\": \"/the-use-and-misuse-of-the-ooda-loop-by-venkatesh-rao\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://studio.ribbonfarm.com/p/the-use-and-misuse-of-the-ooda-loop\"\n  }, \"https://studio.ribbonfarm.com/p/the-use-and-misuse-of-the-ooda-loop\")), mdx(\"hr\", null), mdx(\"p\", null, \"My usual way of drawing the diagram, when I'm actually using it to think, is to make a triangle out of observe-decide-act, with orient in the center.\"), mdx(\"hr\", null), mdx(\"p\", null, \"You should aim to operate at a faster tempo in some situations all of the time, all situations some of the time, but not\\xA0all the situations, all the time.\"), mdx(\"hr\", null), mdx(\"p\", null, \"Orient part is sort off of to one side, generating interruptions, overrides, and exceptional course corrections, while the other three flow into each other serially, generating a smoother base behavior. Orient is conceptually at a higher level of abstraction than the other three, which is why it is something of a category error to visualize it in the same way. Orient is also often a locus of recursion, maintaining internal models of the whole system, including itself. Maps within maps.\"), mdx(\"hr\", null), mdx(\"p\", null, \"Though it is not immediately apparent from the canonical diagram, the greatest strength of the OODA language is that it assumes an adversary. This does not mean it is a \\\"wartime\\\" construct useful only when there is an explicit adversary. It is useful for modeling any kind of non-aligned intentions in a situation.\"), mdx(\"hr\", null), mdx(\"p\", null, \"A naive way to think of the OODA model of your mind is to treat it as a well-governed hierarchy. GluttonMe wants to eat a bag of chips, while StoicMe wants to go the gym. Does each part of me tamely offer up a candidate \\\"orientation\\\" to a higher level OODA loop for adjudication and rational choice? Is there a CEOme that chooses whether GluttonMe or StoicMe will be in the driver's seat as prevailing orientation for Mission NextFiveMinutes, with the rest falling in line to observe/decide/act appropriately?\"), mdx(\"p\", null, \"Hell no, it's a battlefield in there. Different bits of you are constantly trying to fool each other to get their way. There's always many MiniMes contending for control, but no Dr. Evil.\"), mdx(\"p\", null, \"The OODA diagramming language is good for this because it gives you a tractable set of primitives with which to capture what's happening. In my example above, maybe StoicMe can simply hide the bag of chips, thereby pwning the OODA loop of GluttonMe, and exhausting its drive to eat chips by removing the sensory reinforcement of desire. Once I weaken that drive enough, hey, I can go to the gym.\"), mdx(\"hr\", null), mdx(\"p\", null, \"A good decision-maker can refine their thinking with OODA, but OODA won't turn a bad decision-maker into a good one.\"), mdx(\"hr\", null), mdx(\"p\", null, \"OODA diagramming is good for figuring out how you're stuck, and how to try and shift your behavior patterns so you get unstuck, especially when the adversarial element in the situation is strong.\"), mdx(\"p\", null, \"But it is not the only way, not always the best or most reliable way, and most importantly, not a formulaic way. It requires taste, literacy, an artistic familiarity with the idiom it expresses, and practice to apply well.\"), mdx(\"p\", null, \"If you use the OODA loop like an alchemist looking to turn lead into gold, you're going to be disappointed.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"https://studio.ribbonfarm.com/p/the-use-and-misuse-of-the-ooda-loop My usual way of drawing the diagram, when I'm actually using it to thinkâ€¦","timeToRead":2,"banner":null}},"pageContext":{"slug":"/the-use-and-misuse-of-the-ooda-loop-by-venkatesh-rao","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}
{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/live-life-not-projects","result":{"data":{"post":{"slug":"/live-life-not-projects","title":"Live Life, Not Projects","date":"21.06.2022","tags":null,"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Live Life, Not Projects\",\n  \"date\": \"2022-06-21T00:00:00.000Z\",\n  \"slug\": \"/live-life-not-projects\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ribbonfarm.com/2012/02/20/live-life-not-projects\"\n  }, \"https://ribbonfarm.com/2012/02/20/live-life-not-projects\")), mdx(\"hr\", null), mdx(\"p\", null, \"An arrival fallacy in the sense of Rubin is any pattern of thinking that fits the template, I\\u2019ll be happy when __\"), mdx(\"hr\", null), mdx(\"p\", null, \"The idea generalizes beyond happiness to any sort of goal-driven behavior. You could use templates like I\\u2019ll be ready _\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"_ once ___\"), \". Or I\\u2019ll really understand life when \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"____\"), \". \\xA0Call the first template Type A (happiness fallacies), and the other two Type B (readiness fallacies) and Type C (enlightenment fallacies) respectively. There are probably other common types, but we\\u2019ll stick to three\"), mdx(\"hr\", null), mdx(\"p\", null, \"You can expect to become either a more complex person or a more confused person.\"), mdx(\"p\", null, \"Life stories may go up and down with respect to some measure of success, but they rarely become simpler as they age. People may adopt simpler behaviors and personalities, but inner personalities rarely get simpler. At most you get arrested development or bewildered confusion and incomprehension. To actually reverse development takes a cult.\"), mdx(\"p\", null, \"The potential positive outcome is that you will get more complex. Since more of your life potential will have turned into life history, you will have a more complex story to explain to yourself, and less time and control over the rest of the story.\"), mdx(\"p\", null, \"If you succeed in crafting a solid explanation that can withstand exposure to new realities, you will become a more complex person.\"), mdx(\"p\", null, \"If you fail to comprehend your new realities, you will become a more confused person. Your old world views will no longer work, but you will have failed to construct new ones that do. You can either continue stumbling forward in bewildered incomprehension or build walls of denial to shield you from new realities. Or join a cult and hit the reverse gear.\"), mdx(\"p\", null, \"The arrival fallacy is a fallacy because it predicts the exact opposite of what actually happens: that life will get simpler.\\xA0\"), mdx(\"hr\", null), mdx(\"p\", null, \"To operate with the expectation that things will get more complex with every transformation is to live life.\"), mdx(\"p\", null, \"To operate with the expectation that things will get simpler with every transformation is to live a series of unsatisfying projects. \"), mdx(\"hr\", null), mdx(\"p\", null, \"A life that gets progressively more complex takes a good deal more philosophy and reflection to navigate. Success and failure become matters of perspective and interpretation rather than simple arrival. \\xA0You may even find that the categories become less relevant to you with each arrival.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"https://ribbonfarm.com/2012/02/20/live-life-not-projects An arrival fallacy in the sense of Rubin is any pattern of thinking that fits theâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/live-life-not-projects","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}